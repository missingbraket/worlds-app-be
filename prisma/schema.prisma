// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  password String
  name     String
  role     String    
  question Question[]
  answer   Answer[]
  community Community[]
  comment Comment[]
}

model Question {
  id          Int          @id @default(autoincrement())
  title       String
  content     String
  createdAt   DateTime     @default(now())
  user        User         @relation(fields: [userId], references: [id])
  userId      Int
  answers     Answer[]
  attachment       Attachment[]
}

model Answer {
  id          Int      @id @default(autoincrement())
  content     String
  createdAt   DateTime @default(now())
  question    Question @relation(fields: [questionId], references: [id])
  questionId  Int
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
}

model Attachment {
  id        Int         @id @default(autoincrement())
  fileName  String
  fileUrl   String
  fileSize  Int
  fileType  String
  createdAt DateTime    @default(now())
  question  Question    @relation(fields: [questionId], references: [id])
  questionId    Int
}

model Community {
  id          Int          @id @default(autoincrement())
  title       String
  content     String
  createdAt   DateTime     @default(now())
  user        User         @relation(fields: [userId], references: [id])
  userId      Int
  comment     Comment[]
}

model Comment {
  id          Int      @id @default(autoincrement())
  content     String
  createdAt   DateTime @default(now())
  community    Community @relation(fields: [communityId], references: [id])
  communityId  Int
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
}